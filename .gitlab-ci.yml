stages:
  - build
  - push
  - staging
  - build.production
  - production

image: docker:19.03

variables:
  APP_NAME: avastar-frontend
  DOCKER_FILE_PATH: deployments/docker/Dockerfile
  IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  KUBECTL_IMAGE: registry-gitlab.smarthead.ru/avastar/smarthead.avastar.kubectl-y:50-master

Build.Staging:
  tags: [csharp]
  stage: build
  only:
    - master
  before_script:
    - echo -n ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:latest || true
    - >
        docker build
        --pull
        --cache-from ${CI_REGISTRY_IMAGE}:latest
        --tag ${IMAGE_TAG}
        -f ${DOCKER_FILE_PATH}
        .
    - docker push ${IMAGE_TAG}

Push master:
  stage: push
  tags: [csharp,net]
  allow_failure: false
  variables:
    GIT_STRATEGY: none
  only:
    - master
  before_script:
    - echo -n ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}
  script:
    - docker pull ${IMAGE_TAG}
    - docker tag ${IMAGE_TAG} ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}-master
    - docker tag ${IMAGE_TAG} ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}-master
    - docker push ${CI_REGISTRY_IMAGE}:latest

.deploy_template: &deploy
  tags: [csharp,net]
  only:
    - master
  image: ${KUBECTL_IMAGE}
  before_script:
    - yc config profile create deployment
    - yc config set service-account-key ${SERVICE_ACCOUNT_FILE}
    - yc config set folder-id ${FOLDER_ID}
    - yc config set cloud-id ${CLOUD_ID}
    - yc managed-kubernetes cluster get-credentials ${CLUSTER_NAME} --external
    - kubectl create ns ${KUBE_NAMESPACE} || true
    - >
      kubectl create secret docker-registry gitlab-auth
      --docker-server="${CI_REGISTRY}"
      --docker-username="gitlab-ci-token"
      --docker-password="${CI_JOB_TOKEN}"
      --dry-run=client -o yaml | kubectl apply -f -
  script:
    - envsubst < deployments/k8s/frontend.yaml | kubectl apply -f -
    - kubectl rollout status deployment/${CI_ENVIRONMENT_SLUG}-${APP_NAME} -n ${KUBE_NAMESPACE}

Deploy.Staging:
  <<: *deploy
  stage: staging
  environment:
    name: staging
    url: https://${APP_DOMAIN}
  variables:
    APP_DOMAIN: avastar.smartheadtest.ru
    IMAGE: ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}-master

Build.Production:
  tags: [csharp]
  stage: build.production
  when: manual
  variables:
    DOCKER_FILE_PATH: deployments/docker/Dockerfile_production
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}-production
  only:
    - master
  before_script:
    - echo -n ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token --password-stdin ${CI_REGISTRY}
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:latest || true
    - >
        docker build
        --pull
        --cache-from ${CI_REGISTRY_IMAGE}:latest
        --tag ${IMAGE_TAG}
        -f ${DOCKER_FILE_PATH}
        .
    - docker tag ${IMAGE_TAG} ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}-master-production
    - docker push ${IMAGE_TAG}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}-master-production

Deploy.Production:
  <<: *deploy
  stage: production
  environment:
    name: production
    url: https://${APP_DOMAIN}
  variables:
    APP_DOMAIN: avastar.ru
    IMAGE: ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_IID}-master-production
  when: manual
